---
interface Slide {
  image: string;
  alt: string;
}

interface Props {
  slides: Slide[];
}

const { slides } = Astro.props;
---

<div class="carousel-container relative w-full h-[40vh] sm:h-[45vh] md:h-[55vh] lg:h-[65vh] overflow-hidden">
  <!-- Slides -->
  {slides.map((slide, index) => (
    <div
      class={`carousel-slide absolute inset-0 transition-opacity duration-1000 ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
      data-slide-index={index}
    >
      <img
        src={slide.image}
        alt={slide.alt}
        class="w-full h-full object-cover"
      />
      <div class="absolute inset-0 bg-gradient-to-b from-slate-900/60 via-slate-900/40 to-slate-900/80"></div>
    </div>
  ))}

  <!-- Navigation Dots -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 flex gap-3 z-20">
    {slides.map((_, index) => (
      <button
        class={`carousel-dot w-3 h-3 rounded-full transition-all ${index === 0 ? 'bg-white w-8' : 'bg-white/50 hover:bg-white/75'}`}
        data-slide={index}
        aria-label={`Go to slide ${index + 1}`}
      />
    ))}
  </div>

  <!-- Previous/Next Buttons -->
  <button
    class="carousel-prev absolute left-6 top-1/2 -translate-y-1/2 w-12 h-12 rounded-full bg-white/10 hover:bg-white/20 backdrop-blur-sm flex items-center justify-center transition z-20"
    aria-label="Previous slide"
  >
    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
    </svg>
  </button>

  <button
    class="carousel-next absolute right-6 top-1/2 -translate-y-1/2 w-12 h-12 rounded-full bg-white/10 hover:bg-white/20 backdrop-blur-sm flex items-center justify-center transition z-20"
    aria-label="Next slide"
  >
    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
    </svg>
  </button>
</div>

<script>
  let currentSlide = 0;
  let autoplayInterval: number;

  const slides = document.querySelectorAll('.carousel-slide');
  const dots = document.querySelectorAll('.carousel-dot');
  const totalSlides = slides.length;

  function showSlide(index: number) {
    // Hide all slides
    slides.forEach(slide => {
      slide.classList.remove('opacity-100');
      slide.classList.add('opacity-0');
    });

    // Reset all dots
    dots.forEach(dot => {
      dot.classList.remove('w-8', 'bg-white');
      dot.classList.add('bg-white/50', 'w-3');
    });

    // Show current slide
    slides[index].classList.remove('opacity-0');
    slides[index].classList.add('opacity-100');

    // Highlight current dot
    dots[index].classList.remove('bg-white/50', 'w-3');
    dots[index].classList.add('bg-white', 'w-8');

    currentSlide = index;
  }

  function nextSlide() {
    const next = (currentSlide + 1) % totalSlides;
    showSlide(next);
  }

  function prevSlide() {
    const prev = (currentSlide - 1 + totalSlides) % totalSlides;
    showSlide(prev);
  }

  function startAutoplay() {
    autoplayInterval = window.setInterval(nextSlide, 5000); // Change slide every 5 seconds
  }

  function stopAutoplay() {
    clearInterval(autoplayInterval);
  }

  // Dot navigation
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      showSlide(index);
      stopAutoplay();
      startAutoplay(); // Restart autoplay
    });
  });

  // Previous/Next buttons
  document.querySelector('.carousel-prev')?.addEventListener('click', () => {
    prevSlide();
    stopAutoplay();
    startAutoplay();
  });

  document.querySelector('.carousel-next')?.addEventListener('click', () => {
    nextSlide();
    stopAutoplay();
    startAutoplay();
  });

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft') {
      prevSlide();
      stopAutoplay();
      startAutoplay();
    } else if (e.key === 'ArrowRight') {
      nextSlide();
      stopAutoplay();
      startAutoplay();
    }
  });

  // Pause on hover
  const container = document.querySelector('.carousel-container');
  container?.addEventListener('mouseenter', stopAutoplay);
  container?.addEventListener('mouseleave', startAutoplay);

  // Start autoplay
  startAutoplay();
</script>
